apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply from: '../config/quality/quality.gradle'

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId rootProject.applicationId
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField("String", "BUILD_TIME", "\"build at ${rootProject.BUILD_TIME}\"")
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
            storeFile file('keystore/debug.keystore')
        }
        release {
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
            storeFile file('keystore/debug.keystore')
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.debug
            proguardFiles 'proguard-rules-debug.pro'
        }
        release {
            minifyEnabled true
            debuggable false
            signingConfig signingConfigs.release
            proguardFiles 'proguard-rules.pro'
        }
    }

    flavorDimensions "env"
    productFlavors {
        dev {
            versionCode rootProject.MAJOR * 1000000000 + rootProject.MINOR * 1000000 + rootProject.PATCH * 1000 + rootProject.BUILD
            versionName "${rootProject.MAJOR}.${rootProject.MINOR}.${rootProject.PATCH}.${rootProject.BUILD}"
            buildConfigField("String", "BASE_URL", "\"${rootProject.BASE_URL_TEST}\"")
            applicationIdSuffix ".dev"
            dimension "env"
        }

        prod {
            versionCode rootProject.MAJOR * 1000000 + rootProject.MINOR * 1000 + rootProject.PATCH
            versionName "${rootProject.MAJOR}.${rootProject.MINOR}.${rootProject.PATCH}"
            buildConfigField("String", "BASE_URL", "\"${rootProject.BASE_URL_PROD}\"")
            dimension "env"
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }
    buildToolsVersion '27.0.3'
}

greendao {
    schemaVersion 1
}

dependencies {
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraitLayoutVersion"
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.guava:guava:$rootProject.guavaVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    implementation "org.greenrobot:eventbus:$rootProject.eventbusVersion"
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    implementation "de.hdodenhof:circleimageview:$rootProject.circleImageViewVersion"
    implementation "com.google.zxing:core:$rootProject.zxingVersion"
    implementation "com.google.zxing:android-core:$rootProject.zxingVersion"
    implementation "org.greenrobot:greendao:$rootProject.greenDaoVersion"
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:$rootProject.brvahVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.okhttpVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
}

//fir{
//    apiToken "$rootProject.firApiToken"
//    changeLog 'git log --format=%B -n 1'.execute([], project.rootDir).text.trim()
//}